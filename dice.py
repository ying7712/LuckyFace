from machine import Pin, I2C
import ssd1306
import time
import random

# ===== 字型資料（太長略）=====
CHARACTER_DATA = {
    "大": [0, 0, 0, 128, 0, 128, 0, 128, 0, 128, 0, 128, 63, 254, 1, 128, 1, 64, 1, 64, 3, 32, 2, 48, 4, 16, 12, 12, 48, 6, 96, 3],
    "吉": [0, 0, 1, 0, 1, 0, 127, 252, 1, 0, 1, 0, 63, 252, 0, 0, 0, 0, 31, 248, 16, 8, 16, 8, 16, 8, 16, 8, 31, 248, 16, 8],
    "半": [0, 0, 49, 12, 17, 8, 9, 24, 9, 16, 1, 32, 63, 252, 1, 0, 1, 0, 1, 0, 127, 254, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    "末": [0, 0, 1, 0, 1, 0, 1, 0, 127, 252, 1, 0, 1, 0, 1, 0, 63, 252, 3, 128, 5, 64, 13, 32, 25, 16, 97, 12, 193, 6, 1, 0],
    "小": [0, 0, 0, 128, 0, 128, 0, 128, 0, 144, 24, 136, 16, 140, 16, 132, 32, 134, 32, 130, 96, 130, 64, 131, 0, 128, 0, 128, 7, 128, 0, 0],
    "凶": [0, 0, 0, 0, 0, 16, 32, 52, 44, 36, 38, 100, 35, 68, 32, 196, 33, 228, 33, 52, 34, 28, 36, 12, 40, 4, 32, 4, 63, 252, 32, 4],
    "好": [0, 0, 17, 252, 16, 12, 32, 8, 126, 16, 50, 32, 50, 32, 37, 254, 100, 32, 116, 32, 92, 32, 12, 32, 22, 32, 50, 32, 65, 224, 0, 0],
    "運": [0, 0, 103, 254, 20, 2, 28, 66, 71, 252, 51, 252, 18, 68, 3, 252, 114, 68, 19, 252, 16, 64, 31, 254, 16, 64, 108, 64, 71, 255, 0, 0],
    "連": [0, 0, 96, 64, 31, 254, 0, 64, 99, 252, 50, 68, 19, 252, 2, 68, 115, 252, 16, 64, 31, 254, 16, 64, 16, 64, 108, 0, 71, 255, 0, 0],
    "天": [0, 0, 0, 0, 0, 0, 127, 252, 1, 0, 1, 0, 1, 0, 1, 0, 127, 254, 1, 128, 2, 128, 2, 192, 6, 96, 12, 48, 56, 24, 224, 14],
    "降": [0, 0, 0, 96, 124, 64, 76, 252, 73, 140, 75, 88, 80, 48, 72, 120, 75, 135, 68, 16, 69, 254, 69, 16, 89, 16, 67, 254, 64, 16, 64, 16],
    "奇": [0, 0, 0, 128, 63, 254, 1, 128, 3, 224, 14, 24, 56, 4, 127, 254, 0, 8, 31, 136, 16, 136, 16, 136, 31, 136, 16, 8, 0, 120, 0, 0],
    "緣": [0, 0, 16, 128, 16, 252, 45, 136, 105, 248, 48, 8, 59, 254, 36, 208, 255, 82, 16, 252, 95, 40, 84, 120, 84, 148, 215, 22, 16, 226, 0, 0],
    "願": [0, 0, 0, 0, 63, 254, 36, 16, 36, 16, 63, 126, 49, 66, 63, 126, 49, 66, 49, 66, 63, 126, 37, 66, 53, 126, 53, 32, 116, 230, 76, 131],
    "望": [0, 0, 8, 0, 8, 124, 127, 68, 32, 124, 32, 68, 32, 252, 32, 132, 63, 156, 0, 0, 63, 252, 1, 0, 63, 248, 1, 0, 1, 0, 127, 252],
    "成": [0, 0, 0, 0, 0, 80, 0, 104, 63, 254, 32, 64, 32, 68, 32, 76, 62, 72, 34, 72, 34, 112, 34, 48, 34, 98, 46, 242, 65, 146, 67, 12],
    "真": [0, 0, 1, 128, 127, 254, 1, 0, 31, 248, 16, 8, 31, 248, 31, 248, 16, 8, 31, 248, 16, 8, 127, 254, 8, 64, 30, 56, 112, 6, 0, 0],
    "星": [0, 0, 0, 0, 31, 248, 16, 8, 16, 8, 31, 248, 16, 8, 31, 248, 16, 0, 24, 128, 31, 252, 32, 128, 79, 248, 0, 128, 0, 128, 63, 254],
    "光": [0, 0, 33, 8, 17, 12, 25, 8, 9, 16, 9, 16, 1, 0, 127, 254, 4, 64, 4, 64, 4, 64, 8, 68, 24, 66, 48, 66, 224, 124, 0, 0],
    "護": [0, 0, 0, 0, 120, 136, 3, 254, 125, 16, 1, 252, 123, 32, 5, 252, 1, 32, 121, 252, 1, 254, 123, 254, 72, 140, 72, 88, 120, 248, 71, 135],
    "體": [0, 0, 60, 40, 36, 254, 44, 170, 44, 254, 44, 170, 126, 254, 127, 254, 36, 0, 60, 254, 36, 130, 60, 254, 36, 68, 36, 40, 45, 255, 0, 0],
    "平": [0, 0, 0, 0, 0, 0, 127, 252, 1, 0, 17, 8, 9, 24, 9, 16, 9, 32, 1, 0, 127, 254, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    "安": [0, 0, 1, 0, 1, 0, 63, 254, 32, 2, 33, 2, 1, 0, 3, 0, 127, 255, 4, 16, 4, 16, 8, 48, 31, 96, 1, 224, 7, 56, 124, 14],
    "是": [0, 0, 0, 0, 31, 248, 16, 8, 31, 248, 16, 8, 16, 8, 31, 248, 0, 0, 127, 254, 16, 128, 8, 252, 24, 128, 28, 128, 54, 128, 97, 255],
    "福": [0, 0, 0, 0, 1, 254, 124, 0, 0, 0, 0, 252, 124, 132, 16, 252, 84, 0, 85, 254, 85, 34, 85, 34, 85, 254, 85, 34, 81, 34, 145, 254],
    "如": [0, 0, 24, 0, 16, 126, 16, 66, 126, 66, 34, 66, 34, 66, 34, 66, 34, 66, 100, 66, 92, 66, 12, 66, 26, 66, 51, 126, 96, 66, 0, 0],
    "以": [0, 0, 0, 0, 16, 8, 16, 12, 18, 8, 17, 8, 17, 136, 16, 152, 16, 16, 16, 16, 18, 48, 22, 48, 56, 88, 96, 204, 3, 6, 14, 2],
    "償": [0, 0, 8, 0, 14, 76, 9, 72, 23, 254, 53, 250, 49, 8, 81, 248, 83, 252, 18, 4, 19, 252, 19, 252, 18, 4, 19, 252, 17, 152, 22, 7],
    "萬": [0, 0, 0, 0, 4, 32, 63, 254, 4, 32, 31, 248, 17, 8, 31, 248, 17, 8, 31, 248, 1, 0, 63, 252, 33, 36, 47, 244, 32, 36, 32, 28],
    "事": [0, 0, 1, 0, 127, 252, 1, 0, 31, 248, 17, 8, 31, 248, 1, 0, 63, 248, 1, 8, 255, 254, 1, 8, 63, 248, 1, 8, 7, 0, 0, 0],
    "可": [0, 0, 0, 0, 0, 0, 127, 254, 0, 8, 0, 8, 31, 136, 16, 136, 16, 136, 16, 136, 16, 136, 31, 136, 16, 8, 0, 8, 0, 8, 0, 248],
    "期": [0, 0, 0, 0, 34, 126, 34, 66, 127, 66, 34, 66, 62, 126, 34, 66, 34, 66, 62, 66, 34, 126, 255, 66, 0, 66, 54, 66, 34, 194, 67, 142],
    "得": [0, 0, 25, 252, 49, 4, 97, 252, 73, 4, 17, 252, 48, 0, 115, 254, 80, 8, 16, 8, 19, 254, 17, 8, 17, 136, 16, 136, 16, 120, 0, 0],
    "心": [0, 0, 7, 0, 1, 192, 0, 96, 0, 0, 4, 0, 36, 24, 36, 8, 36, 12, 36, 4, 100, 6, 68, 18, 196, 16, 4, 16, 7, 240, 0, 0],
    "應": [0, 0, 0, 128, 63, 254, 34, 152, 36, 254, 45, 144, 47, 254, 52, 254, 36, 144, 36, 254, 36, 128, 41, 100, 77, 70, 89, 11, 81, 249, 0, 0],
    "手": [0, 0, 0, 124, 63, 128, 0, 128, 0, 128, 63, 254, 0, 128, 0, 128, 0, 128, 127, 255, 0, 128, 0, 128, 0, 128, 0, 128, 7, 128, 0, 0],
    "尚": [0, 0, 1, 0, 33, 4, 17, 8, 25, 24, 9, 16, 63, 252, 32, 4, 32, 4, 39, 228, 36, 36, 36, 36, 39, 228, 36, 4, 32, 4, 32, 28],
    "一": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 127, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    "搏": [0, 0, 0, 48, 16, 44, 19, 254, 16, 32, 127, 252, 18, 36, 19, 252, 22, 36, 59, 252, 114, 12, 23, 254, 17, 8, 17, 136, 16, 136, 112, 120],
    "漸": [0, 0, 65, 0, 97, 2, 31, 221, 1, 16, 1, 16, 79, 208, 57, 94, 47, 212, 9, 84, 47, 212, 17, 20, 47, 212, 33, 36, 97, 36, 65, 100],
    "入": [0, 0, 0, 0, 0, 0, 15, 128, 0, 128, 0, 128, 1, 128, 1, 192, 1, 64, 3, 64, 2, 96, 6, 32, 4, 16, 8, 24, 24, 12, 96, 7],
    "佳": [0, 0, 8, 64, 8, 64, 19, 252, 16, 64, 48, 64, 119, 252, 80, 0, 16, 64, 16, 64, 23, 252, 16, 64, 16, 64, 16, 64, 31, 254, 0, 0],
    "境": [0, 0, 16, 32, 19, 254, 16, 136, 16, 136, 127, 254, 17, 252, 17, 4, 17, 252, 17, 4, 29, 252, 56, 144, 64, 148, 1, 18, 6, 30, 0, 0],
    "待": [0, 0, 8, 32, 16, 32, 99, 254, 80, 32, 8, 32, 19, 254, 48, 8, 112, 8, 83, 254, 17, 8, 17, 136, 16, 136, 16, 200, 16, 120, 0, 0],
    "磨": [0, 0, 0, 128, 0, 128, 63, 254, 34, 16, 47, 252, 34, 16, 42, 180, 42, 182, 58, 80, 63, 254, 34, 0, 39, 252, 78, 4, 90, 4, 195, 252],
    "練": [0, 0, 0, 32, 16, 32, 51, 254, 172, 32, 72, 32, 49, 254, 25, 170, 37, 106, 253, 178, 21, 254, 92, 48, 84, 104, 84, 172, 83, 35, 148, 34],
    "穩": [0, 0, 0, 14, 63, 240, 112, 36, 17, 40, 17, 252, 124, 32, 19, 254, 51, 252, 56, 4, 95, 254, 83, 252, 144, 96, 16, 176, 18, 140, 18, 250],
    "中": [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 63, 252, 33, 4, 33, 4, 33, 4, 33, 4, 63, 252, 33, 4, 1, 0, 1, 0, 1, 0, 1, 0],
    "求": [0, 0, 1, 32, 1, 112, 1, 8, 127, 252, 1, 0, 33, 12, 17, 152, 25, 176, 9, 96, 1, 96, 5, 48, 25, 24, 97, 12, 65, 6, 15, 0],
    "進": [0, 0, 1, 0, 33, 144, 115, 32, 27, 254, 102, 32, 62, 32, 19, 252, 2, 32, 115, 252, 18, 32, 18, 32, 19, 254, 18, 0, 108, 0, 67, 254],
    "靜": [0, 0, 8, 30, 127, 224, 8, 166, 62, 148, 8, 8, 127, 252, 0, 36, 63, 254, 62, 36, 34, 252, 34, 36, 62, 32, 34, 32, 46, 224, 0, 0],
    "水": [0, 0, 0, 128, 0, 128, 0, 130, 0, 134, 126, 204, 4, 216, 4, 240, 12, 160, 8, 176, 24, 152, 48, 140, 96, 134, 64, 131, 7, 128, 0, 0],
    "時": [0, 0, 0, 0, 0, 32, 124, 32, 69, 252, 68, 32, 68, 32, 127, 254, 68, 8, 71, 254, 68, 8, 69, 8, 124, 136, 64, 200, 0, 8, 0, 120],
    "機": [0, 0, 17, 36, 17, 40, 18, 250, 125, 164, 17, 106, 25, 255, 58, 164, 60, 46, 87, 255, 81, 18, 81, 148, 18, 89, 18, 57, 20, 199, 0, 0],
    "未": [0, 0, 1, 0, 1, 0, 1, 0, 63, 248, 1, 0, 1, 0, 1, 0, 127, 252, 3, 128, 7, 192, 13, 96, 25, 48, 113, 12, 193, 6, 1, 0],
    "到": [0, 0, 0, 0, 0, 2, 127, 162, 16, 34, 18, 34, 49, 34, 127, 162, 9, 34, 8, 34, 127, 34, 8, 34, 8, 2, 11, 130, 254, 2, 0, 30],
    "觀": [0, 0, 34, 126, 255, 194, 34, 66, 119, 126, 85, 66, 119, 126, 36, 66, 63, 66, 100, 126, 127, 40, 36, 40, 63, 105, 63, 201, 33, 143, 0, 0],
    "其": [0, 0, 0, 0, 8, 16, 8, 16, 63, 254, 8, 16, 15, 240, 8, 16, 8, 16, 15, 240, 8, 16, 8, 16, 127, 254, 4, 32, 30, 88, 112, 6],
    "變": [0, 0, 19, 200, 43, 212, 120, 60, 43, 212, 127, 254, 83, 218, 90, 110, 87, 234, 20, 8, 31, 254, 60, 48, 71, 224, 7, 224, 120, 31, 0, 0],
    "守": [0, 0, 1, 0, 1, 0, 127, 252, 64, 4, 64, 4, 0, 32, 0, 32, 127, 254, 0, 32, 24, 32, 12, 32, 4, 32, 6, 32, 0, 32, 3, 224],
    "有": [0, 0, 2, 0, 2, 0, 127, 254, 4, 0, 12, 0, 31, 248, 24, 8, 111, 248, 72, 8, 8, 8, 15, 248, 8, 8, 8, 8, 8, 120, 0, 0],
    "末": [0, 0, 1, 0, 1, 0, 1, 0, 127, 252, 1, 0, 1, 0, 1, 0, 63, 252, 3, 128, 5, 64, 13, 32, 25, 16, 97, 12, 193, 6, 1, 0],
    "小": [0, 0, 0, 128, 0, 128, 0, 128, 0, 144, 24, 136, 16, 140, 16, 132, 32, 134, 32, 130, 96, 130, 64, 131, 0, 128, 0, 128, 7, 128, 0, 0],
    "收": [0, 0, 4, 64, 4, 64, 36, 192, 36, 128, 36, 254, 37, 132, 37, 196, 39, 76, 38, 72, 36, 104, 44, 48, 116, 48, 4, 120, 4, 204, 7, 134],
    "穫": [0, 0, 4, 136, 123, 254, 16, 152, 17, 254, 127, 32, 21, 252, 57, 252, 61, 32, 85, 254, 80, 0, 211, 254, 16, 140, 16, 112, 17, 252, 6, 2],
    "保": [0, 0, 8, 0, 15, 252, 10, 4, 18, 4, 50, 4, 51, 252, 80, 32, 80, 32, 23, 254, 16, 240, 16, 176, 17, 168, 19, 36, 20, 34, 16, 32],
    "持": [0, 0, 16, 32, 16, 32, 17, 252, 124, 32, 16, 32, 19, 254, 16, 8, 28, 8, 115, 254, 17, 8, 16, 136, 16, 200, 16, 136, 112, 56, 0, 0],
    "信": [0, 0, 15, 252, 8, 0, 24, 0, 23, 254, 48, 0, 115, 252, 80, 0, 19, 252, 16, 0, 19, 252, 18, 4, 18, 4, 19, 252, 18, 4, 0, 0],
    "念": [0, 0, 0, 0, 1, 128, 2, 192, 12, 48, 63, 252, 96, 6, 63, 248, 0, 16, 0, 32, 3, 64, 36, 144, 20, 200, 36, 36, 100, 38, 71, 228],
    "雲": [0, 0, 0, 0, 63, 248, 1, 0, 127, 254, 65, 2, 93, 58, 65, 2, 61, 60, 0, 0, 31, 248, 0, 0, 127, 255, 12, 48, 8, 24, 127, 252],
    "開": [0, 0, 0, 0, 62, 126, 34, 66, 62, 126, 34, 66, 34, 66, 62, 126, 32, 2, 47, 242, 34, 66, 47, 242, 34, 66, 34, 66, 36, 66, 44, 78],
    "見": [0, 0, 0, 0, 31, 248, 16, 8, 16, 8, 31, 248, 16, 8, 16, 8, 31, 248, 16, 8, 31, 248, 4, 64, 4, 64, 12, 66, 24, 66, 112, 126],
    "月": [0, 0, 0, 0, 0, 0, 31, 248, 16, 8, 16, 8, 31, 248, 16, 8, 16, 8, 16, 8, 31, 248, 16, 8, 32, 8, 32, 8, 64, 8, 192, 248],
    "稍": [0, 0, 0, 32, 61, 34, 81, 166, 16, 164, 17, 32, 125, 254, 17, 2, 57, 2, 53, 254, 117, 2, 81, 2, 209, 254, 17, 2, 17, 2, 17, 30],
    "縱": [0, 0, 16, 0, 17, 180, 45, 36, 106, 100, 44, 250, 49, 202, 25, 155, 43, 8, 127, 72, 25, 78, 89, 72, 85, 104, 85, 104, 145, 152, 17, 143],
    "即": [0, 0, 0, 0, 0, 0, 63, 126, 33, 66, 33, 66, 63, 66, 33, 66, 33, 66, 63, 66, 32, 66, 36, 66, 34, 66, 39, 78, 61, 64, 97, 192],
    "逝": [0, 0, 2, 0, 34, 6, 114, 56, 15, 160, 66, 32, 98, 63, 19, 36, 7, 164, 118, 36, 18, 36, 18, 68, 18, 68, 22, 196, 44, 0, 67, 255],
    "轉": [0, 0, 8, 0, 8, 16, 126, 254, 8, 254, 8, 146, 126, 254, 74, 146, 126, 254, 74, 20, 126, 254, 9, 255, 126, 136, 8, 72, 8, 104, 8, 56],
    "將": [0, 0, 8, 0, 72, 32, 72, 124, 73, 196, 79, 40, 120, 176, 8, 96, 9, 136, 10, 8, 251, 254, 73, 8, 73, 136, 72, 200, 72, 8, 136, 120],
    "至": [0, 0, 0, 0, 0, 0, 127, 254, 6, 32, 4, 112, 12, 24, 63, 252, 1, 6, 1, 0, 63, 248, 1, 0, 1, 0, 1, 0, 1, 0, 127, 254],
    "留": [0, 0, 0, 0, 2, 0, 60, 254, 32, 38, 36, 36, 34, 68, 62, 68, 97, 156, 0, 0, 31, 248, 17, 8, 31, 248, 17, 8, 17, 8, 31, 248],
    "青": [0, 0, 1, 0, 63, 252, 1, 0, 63, 248, 1, 0, 127, 252, 0, 0, 31, 248, 16, 8, 31, 248, 16, 8, 31, 248, 16, 8, 16, 120, 0, 0],
    "山": [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 33, 4, 33, 4, 33, 4, 33, 4, 33, 4, 33, 4, 33, 4, 33, 4, 63, 252, 32, 4],
    "另": [0, 0, 0, 0, 31, 248, 16, 8, 16, 8, 16, 8, 16, 8, 31, 248, 1, 0, 1, 0, 127, 248, 2, 8, 2, 8, 4, 8, 24, 8, 96, 112],
    "禍": [0, 0, 0, 0, 0, 252, 120, 132, 0, 132, 0, 188, 124, 164, 16, 164, 85, 254, 85, 2, 85, 122, 85, 74, 85, 74, 85, 122, 145, 66, 17, 6],
    "相": [0, 0, 8, 0, 8, 254, 8, 130, 126, 130, 8, 254, 24, 130, 28, 130, 26, 130, 42, 254, 104, 130, 72, 130, 8, 130, 8, 254, 8, 130, 0, 0],
    "依": [0, 0, 12, 64, 8, 64, 16, 64, 31, 254, 48, 192, 112, 192, 81, 38, 19, 40, 29, 48, 25, 16, 17, 16, 17, 8, 17, 252, 23, 134, 0, 0],
}

# ===== 籤詩地圖與權重池 =====
fortune_map = {
    "大吉": ['好運連連', '天降奇緣'],
    "吉": ['平安是福', '如願以償'],
    "半吉": ['尚可一搏', '漸入佳境'],
    "末吉": ['心靜如水', '時機未到'],
    "末小吉": ['小有收穫', '保持信念'],
    "凶": ['轉機將至', '留得青山'],
}

lottery_pool = (
    ["大吉"] * 16 +
    ["吉"] * 35 +
    ["半吉"] * 12 +
    ["末小吉"] * 1 +
    ["末吉"] * 1 +
    ["凶"] * 30
)

# ===== 硬體設定 =====
i2c = I2C(0, scl=Pin(22), sda=Pin(21))
oled = ssd1306.SSD1306_I2C(128, 64, i2c)
button = Pin(36, Pin.IN, Pin.PULL_UP)

led_green = Pin(13, Pin.OUT)
led_yellow = Pin(12, Pin.OUT)
led_red = Pin(16, Pin.OUT)

# ===== 字型繪圖函式 =====
def draw_chinese(x, y, char):
    data = CHARACTER_DATA.get(char)
    if not data:
        return
    for row in range(16):
        for col in range(16):
            byte_index = row * 2 + col // 8
            bit_index = 7 - (col % 8)
            if data[byte_index] & (1 << bit_index):
                oled.pixel(x + col, y + row, 1)

def draw_text(x, y, text):
    for i, ch in enumerate(text):
        draw_chinese(x + i * 16, y, ch)

def draw_omamori(x, y):
    for i in range(10, 54):
        oled.pixel(x+i-10, y+10, 1)
        oled.pixel(x+i-10, y+54, 1)
    for j in range(10, 55):
        oled.pixel(x+0, y+j-10, 1)
        oled.pixel(x+44, y+j-10, 1)
    for i in range(10):
        oled.pixel(x+17+i, y+3-int(i/2), 1)
    oled.line(x+12, y+10, x+22, y+0, 1)
    oled.line(x+22, y+0, x+32, y+10, 1)
    oled.fill_rect(x+15, y+28, 14, 2, 1)
    oled.fill_rect(x+15, y+36, 14, 2, 1)

# ===== 顯示籤結果與詩 =====
def show_result(lottery):
    oled.fill(0)

    # 籤字置中畫在畫面中間偏左（64為中線）
    start_x = (64 - len(lottery) * 16) // 2
    for i, ch in enumerate(lottery):
        draw_chinese(start_x + i * 16, 8, ch)

    # 畫御守（固定在右邊 x=64）
    draw_omamori(64, 0)

    # 詩籤全部固定對齊在 x=0，讓畫面整齊
    short = random.choice(fortune_map[lottery])
    poem_x = 0  # 🔧 所有詩都靠左畫，不會擋御守、不會跑版

    if len(short) == 4:
        draw_text(poem_x, 32, short[:2])
        draw_text(poem_x, 48, short[2:])
    else:
        draw_text(poem_x, 40, short)

    oled.show()

# ===== LED 控制 =====
def set_led(lottery):
    if "大吉" in lottery or "吉" == lottery:
        led_red.off()
        led_yellow.off()
        led_green.on()
    elif "凶" in lottery:
        led_red.on()
        led_yellow.off()
        led_green.off()
    elif "末" in lottery or "半" in lottery:
        led_red.off()
        led_yellow.on()
        led_green.off()
    else:
        led_red.on()
        led_yellow.on()
        led_green.off()

# ==== 🎬 開場動畫：狐狸跳階 + 倒數 ====
fox_frames = {
    "frame1": [
        "0000000000000000",
        "0000000000000000",
        "0000100000000000",
        "0000110001100000",
        "0000110111100000",
        "0000000000100000",
        "0000100100100000",
        "0001000000100000",
        "0000001000100100",
        "0000000001100100",
        "0000000000100100",
        "0000000000011000",
        "0000011111110000",
        "0000111101100000",
        "0000000000000000",
        "0000000000000000"
    ],
    "frame2": [
        "0000000000000000",
        "0000000000000000",
        "0000100000000000",
        "0000110001100000",
        "0000110111100000",
        "0000000000100000",
        "0000100100100000",
        "0001000000100000",
        "0000001000100100",
        "0000000001100100",
        "0000000000100100",
        "0000000000011000",
        "0000001111110000",
        "0000011101100000",
        "0000000000000000",
        "0000000000000000"
    ],
    "frame3": [
        "0000000000000000",
        "0000000000000000",
        "0000000000000000",
        "0000100000000000",
        "0000110001100000",
        "0000110111100000",
        "0000000000100000",
        "0000100100100000",
        "0001000000100000",
        "0000001000100100",
        "0000000001100100",
        "0000000000100100",
        "0000000000011000",
        "0000011111110000",
        "0000111101100000",
        "0000000000000000"
    ]
}

# ===== 中文顯示函式 =====
def draw_chinese(x, y, char):
    data = CHARACTER_DATA.get(char)
    if not data:
        return
    for row in range(16):
        for col in range(16):
            byte_index = row * 2 + col // 8
            bit_index = 7 - (col % 8)
            if data[byte_index] & (1 << bit_index):
                oled.pixel(x + col, y + row, 1)

def draw_text(x, y, text):
    for i, ch in enumerate(text):
        draw_chinese(x + i * 16, y, ch)

# ===== 狐狸繪圖動畫 =====
def draw_pixel_fox(x, y, frame_name):
    frame = fox_frames.get(frame_name)
    if not frame:
        return
    for row in range(16):
        for col in range(16):
            if frame[row][col] == '1':
                oled.pixel(x + col, y + row, 1)

# ===== 倒數動畫（狐狸跳） =====
def draw_countdown_fox():
    frames = ["frame1", "frame2", "frame3"]
    positions = [40, 28, 16]
    for i in range(3):
        oled.fill(0)
        draw_pixel_fox(56, positions[i], frames[i])
        oled.text(str(3 - i), 16, 20)
        oled.show()
        time.sleep(0.5)
    oled.fill(0)
    oled.show()

# ===== 顯示籤與詩 =====
smileys = {
    "normal": [
        "0000001111000000",
        "0001111111110000",
        "0011111111111000",
        "0111100000011100",
        "0110000000001100",
        "1100011001100011",
        "1100011001100011",
        "1100000000000011",
        "1100010001000011",
        "1100000000000011",
        "0110000000001100",
        "0111001110011100",
        "0011111111111000",
        "0001111111110000",
        "0000011111100000",
        "0000000000000000"
    ],
    "wink": [
        "0000001111000000",
        "0001111111110000",
        "0011111111111000",
        "0111100000011100",
        "0110000000001100",
        "1100000000000011",
        "1100011001100011",
        "1100000000000011",
        "1100010001000011",
        "1100000000000011",
        "0110000000001100",
        "0111001110011100",
        "0011111111111000",
        "0001111111110000",
        "0000011111100000",
        "0000000000000000"
    ],
    "sunglasses": [
        "0000001111000000",
        "0001111111110000",
        "0011111111111000",
        "0111111111111100",
        "0111111111111100",
        "1101111111111011",
        "1101111111111011",
        "1101111111111011",
        "1101111111111011",
        "1101111111111011",
        "0111111111111100",
        "0111001110011100",
        "0011111111111000",
        "0001111111110000",
        "0000011111100000",
        "0000000000000000"
    ]
}

# ===== 中文顯示函式 =====
def draw_chinese(x, y, char):
    data = CHARACTER_DATA.get(char)
    if not data:
        return
    for row in range(16):
        for col in range(16):
            byte_index = row * 2 + col // 8
            bit_index = 7 - (col % 8)
            if data[byte_index] & (1 << bit_index):
                oled.pixel(x + col, y + row, 1)

def draw_text(x, y, text):
    for i, ch in enumerate(text):
        draw_chinese(x + i * 16, y, ch)

# ===== 笑臉繪圖 =====
def draw_smiley_16x16(x, y, style="normal"):
    bitmap = smileys.get(style, smileys["normal"])
    for row in range(16):
        for col in range(16):
            if bitmap[row][col] == '1':
                oled.pixel(x + col, y + row, 1)

# ===== 倒數動畫（笑臉跳）=====
def draw_countdown_face():
    jump_y = [40, 28, 16]
    style = random.choice(list(smileys.keys()))
    for i in range(3):
        oled.fill(0)
        draw_smiley_16x16(56, jump_y[i], style)
        oled.text(str(3 - i), 16, 20)
        oled.show()
        time.sleep(0.5)
    oled.fill(0)
    oled.show()

# ===== 顯示籤與詩 =====
def draw_omamori(x, y):
    for i in range(10, 54):
        oled.pixel(x+i-10, y+10, 1)
        oled.pixel(x+i-10, y+54, 1)
    for j in range(10, 55):
        oled.pixel(x+0, y+j-10, 1)
        oled.pixel(x+44, y+j-10, 1)
    for i in range(10):
        oled.pixel(x+17+i, y+3-int(i/2), 1)
    oled.line(x+12, y+10, x+22, y+0, 1)
    oled.line(x+22, y+0, x+32, y+10, 1)
    oled.fill_rect(x+15, y+28, 14, 2, 1)
    oled.fill_rect(x+15, y+36, 14, 2, 1)

def show_result(lottery):
    oled.fill(0)
    start_x = (64 - len(lottery) * 16) // 2
    for i, ch in enumerate(lottery):
        draw_chinese(start_x + i * 16, 8, ch)
    draw_omamori(64, 0)
    short = random.choice(fortune_map[lottery])
    poem_x = 0
    if len(short) == 4:
        draw_text(poem_x, 32, short[:2])
        draw_text(poem_x, 48, short[2:])
    else:
        draw_text(poem_x, 40, short)
    oled.show()

# ===== LED 控制 =====
def set_led(lottery):
    if "大吉" in lottery or "吉" == lottery:
        led_red.off()
        led_yellow.off()
        led_green.on()
    elif "凶" in lottery:
        led_red.on()
        led_yellow.off()
        led_green.off()
    elif "末" in lottery or "半" in lottery:
        led_red.off()
        led_yellow.on()
        led_green.off()
    else:
        led_red.on()
        led_yellow.on()
        led_green.off()

# ===== 主程式迴圈 =====
last_state = 1
while True:
    current = button.value()
    if last_state == 1 and current == 0:
        draw_countdown_face()
        lottery = random.choice(lottery_pool)
        show_result(lottery)
        set_led(lottery)
        time.sleep(0.2)
    last_state = current
